{%- assign filters_default = search.filters | default: collection.filters -%}

<form data-collection-filters-form class="collection__filters">
  <collapsible-elements>
    {%- for filter in filters_default -%}
      {%- liquid
        assign filter_check_active = filter.values | where: 'active', false
        assign filter_check_count = filter.values | where: 'count', 0
        assign filter_hidden = false

        if filter.type == 'list' and filter.values.size == filter_check_active.size and filter.values.size == filter_check_count.size
          assign filter_hidden = true
        endif

        assign animation_delay = animation_delay | plus: animation_delay_increment

        if forloop.first and animation_delay == 50
          assign animation_delay = animation_delay | plus: 200
        endif
      -%}

      <div class="filter-group{% if filter_hidden %} filter-group--hidden{% endif %}"
        data-animation="{{ animation_name }}"
        data-animation-duration="{{ animation_duration }}"
        {% if filter_hidden %}
          style="display: none;"
          {% assign animation_delay = animation_delay | minus: animation_delay_increment %}
        {% endif %}
        data-animation-delay="{{ animation_delay }}"
      >
        <details data-collapsible open="true">
          <summary class="filter-group__heading" data-collapsible-trigger>
            <span>{{ filter.label }} </span>
            {%- if filter.active_values.size > 0 -%}
              <span>({{ filter.active_values.size }})</span>
            {%- endif -%}

            {%- render 'icon-plus' -%}
            {%- render 'icon-minus' -%}
          </summary>

          <div class="filter-group__body" data-collapsible-body style="height: auto;">
            <div class="filter-group__content" data-collapsible-content>
              {%- assign option_name_handle_separator = filter.label | handle | prepend: ',' | append: ',' -%}
              {% comment %} Determine if current option matches swatch handle translations {% endcomment %}

{%- if settings.color_swatches -%}
  {%- assign is_swatch_option = false -%}
  {%- assign swatch_translation = 'general.swatches.color' | t -%}
  {%- assign translation_string = swatch_translation | remove: '  ' | replace: ', ', ',' | replace: ' ,', ',' | replace: ',', '____' | handle | replace: '____', ',' | append: ',' | prepend: ',' -%}

  {%- if translation_string contains option_name_handle_separator -%}
    {%- assign is_swatch_option = true -%}
  {%- endif -%}
{%- endif -%}

              {%- case filter.type -%}
                {%- when 'list' or 'boolean' -%}
                  <ul class="collection-nav">
                    {%- for filter_value in filter.values -%}
                      <li class="sidebar__item{% if filter_value.active %} sidebar__item--active link--remove{% elsif filter_value.count == 0 and filter_value.active == false %} link--disable{% else %} link--add{% endif %}{% if forloop.index > 10 %} is-hidden{% endif %}"{% if forloop.index > 10 %} data-link-hidden{% endif %}>
                        <input type="checkbox"
                          name="{{ filter_value.param_name }}"
                          value="{{ filter_value.value }}"
                          id="filter-{{ filter.label }}-{{ forloop.index }}"
                          {% if filter_value.active -%}checked{%- endif %}
                          {% if filter_value.count == 0 and filter_value.active == false -%}disabled{%- endif %}>
                        <label for="filter-{{ filter.label }}-{{ forloop.index }}">
                          {%- if is_swatch_option -%}
                            <span class="swatch__button swatch__button--{{ settings.swatch_style }}" data-swatch="{{ filter_value.label | escape_once }}"></span>
                          {%- endif -%}

                          {{ filter_value.label }}
                        </label>
                      </li>
                    {%- endfor -%}
                  </ul>

                  {%- if filter.values.size > 10 -%}
                    <div class="collection__sidebar__actions">
                      <a href="#" data-show-more class="collection__sidebar__link">
                        {%- render 'icon-arrow-separate-vertical' -%}
                        {{ 'collections.general.show_more' | t }}
                      </a>
                    </div>
                  {%- endif -%}
                {%- when 'price_range' -%}
                  <div class="filter__price" data-range-holder>
                    {%- liquid
                      if shop.money_format contains "comma_separator"
                        assign filter_max_money = filter.range_max | money_without_currency | replace: '.', '' | replace: ',', '.'
                      else
                        assign filter_max_money = filter.range_max | money_without_currency | replace: ',', ''
                      endif
                      assign filter_max_money_ceil = filter_max_money | ceil
                      assign filter_min_value = 0
                      assign filter_max_value = filter_max_money_ceil

                      if filter.min_value.value
                        if shop.money_format contains "comma_separator"
                          assign filter_min_value = filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' | floor
                        else
                          assign filter_min_value = filter.min_value.value | money_without_currency | replace: ',', '' | floor
                        endif
                      endif

                      if filter.max_value.value
                        if shop.money_format contains "comma_separator"
                          assign filter_max_value = filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' | ceil
                        else
                          assign filter_max_value = filter.max_value.value | money_without_currency | replace: ',', '' | ceil
                        endif
                      endif
                    -%}

                    <div class="filter__price__range range" data-range-slider data-range-filter-update data-se-min="0" data-se-step="1" data-se-min-value="{{ filter_min_value }}" data-se-max-value="{{ filter_max_value }}" data-se-max="{{ filter_max_money_ceil }}">
                      <div class="range__dot range__dot--left" data-range-left>
                        <span>&nbsp;</span>
                      </div>
                      <div class="range__dot range__dot--right" data-range-right>
                        <span>&nbsp;</span>
                      </div>
                      <div class="range__line">
                        <span data-range-line>&nbsp;</span>
                      </div>
                    </div>

                    <div class="filter__price__fields">
                      <div class="filter__price__field filter__price__from">
                        <span>{{ cart.currency.symbol }}</span>

                        <input
                          data-field-price-min
                          class="filter__price__input"
                          name="{{ filter.min_value.param_name }}"
                          id="filter-price-from-{{ filter.label }}-{{ forloop.index }}"
                          {% if filter.min_value.value %}value="{{ filter_min_value }}"{% endif %}
                          type="number"
                          placeholder="{{ filter_min_value }}"
                          min="0"
                          max="{{ filter_max_money }}">

                        <label for="filter-price-from-{{ filter.label }}-{{ forloop.index }}">{{ 'products.general.from' | t }}</label>
                      </div>
                      <div class="filter__price__spacer">-</div>
                      <div class="filter__price__field filter__price__to">
                        <span>{{ cart.currency.symbol }}</span>

                        <input
                          data-field-price-max
                          class="filter__price__input"
                          name="{{ filter.max_value.param_name }}"
                          id="filter-price-to-{{ filter.label }}-{{ forloop.index }}"
                          {% if filter.max_value.value %}value="{{ filter_max_value }}"{% endif %}
                          type="number"
                          placeholder="{{ filter_max_value }}"
                          min="0"
                          max="{{ filter_max_money_ceil }}">

                        <label for="filter-price-to-{{ filter.label }}-{{ forloop.index }}">{{ 'products.general.to' | t }}</label>
                      </div>
                    </div>
                  </div>
              {%- endcase -%}
            </div>
          </div>
        </details>
      </div>
    {%- endfor -%}
  </collapsible-elements>
</form>